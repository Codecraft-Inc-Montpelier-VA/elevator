/*
 * DO NOT EDIT THIS FILE!
 * THIS FILE IS AUTOMATICALLY GENERATED FROM A LITERATE PROGRAM SOURCE FILE.
 */
/*

 * Copyright (c) 2003 - 2021 Codecraft, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/*
 *++
 * Project:
 *   +elevator+ -- a test program for coroutines and ncurses.  <by Cary WR Campbell>
 *
 * Module:
 *   Pipe commands and status messages shared by elevator and a test process, 
 *   e.g., Elevator Verification Test (EVT).
 *--
 */
/*
 * Test start and stop commands (from EVT -> elevator):
 */
const char quitTest[] = "q" ;   
const char userRequestedQuitTest[] = "z" ;   
const char helloMessage[] = "Ola!" ;
const char endConfiguration[] = "!EC" ; 
/* 
 * Test configuration commands (from EVT -> elevator) with responses
 * (from elevator -> EVT):
 *
 * f=float, i=integer, s=string, y=#floors, x=#elevators, g=grndFlr
 * Note: lengths are in meters, times in milliseconds, velocity in meters/second.
 */
const char queryMaxDimensions[] = "?MD" ;
const char queryFloorLabels[] = "?FL" ; 
const char setBlockClearTime[] = "!BC" ;
const char setDoorOpenCloseTime[] = "!DO" ;
const char setFloorHeight[] = "!FH" ;
const char setFloorLabels[] = "!FL" ;
const char setGroundFloorLevel[] = "!GF" ;
const char setMaxCabinVelocity[] = "!CV" ;
const char setMaxCloseAttempts[] = "!CA" ;
const char setMinStoppingDistance[] = "!MS" ;
const char setNormalDoorWaitTime[] = "!DW" ;
const char setNumberOfElevators[] = "!NE" ;
const char setNumberOfFloors[] = "!NF" ;
/*
 * Test stimulation commands (from EVT -> elevator) with no response:
 */
const char obstructDoorCommand[]    = "Oax"; // "Hold | release shaft x door."
const char pushCarButtonCommand[]   = "Cyx"; // "Push button y in car x."
const char pushFloorButtonCommnd[]  = "Fyi"; // "Push u or d button on floor y."
/*
 * Statuses (from elevator -> EVT):
 */
const char P_BAD[] = "BAD" ;
const char P_OK[]  = "OK" ;
const char P_END[] = "-30-" ;
/*
 * Notifications (from elevator -> EVT):
 */
const char carLocation[]            = "@yx"; // "Car x is at floor y."
const char doorIsClosed[]           = "%|x"; // "Car x's door is closed."
const char doorIsLocked[]           = "% x"; // "Car x's door is locked."
const char doorIsAjar[]             = "%-x"; // "Car x's door is half-way open."
const char doorIsOpen[]             = "%Ox"; // "Car x's door is completely
                                             //    open."
const char indicatorIsDown[]        = "~vx"; // "Car x's indicator is 'down'."
const char indicatorIsUp[]          = "~^x"; // "Car x's indicator is 'up'."
const char indicatorIsOff[]         = "~ x"; // "Car x's indicator is off."
const char stopIsRequested[]        = "+yx"; // "Car x's floor y button is lit."
const char stopIsCleared[]          = ".yx"; // "Car x's floor y button is off."
const char floorCallIsUp[]          = "*^y"; // "Floor y up call button is lit."
const char floorCallIsDown[]        = "*vy"; // "Floor y down call button lit."
const char floorUpIsCleared[]       = "-^y"; // "Floor y up call button is off."
const char floorDownIsCleared[]     = "-vy"; // "Floor y down call button off."
